# This file was generated by jschema_to_python version 1.2.3.

from ._artifact_location import ArtifactLocation
from ._multiformat_message_string import MultiformatMessageString
from ._property_bag import PropertyBag
from ._reporting_descriptor import ReportingDescriptor
from ._tool_component_reference import ToolComponentReference
from ._translation_metadata import TranslationMetadata
from attrs import define
from attrs import field


@define()
class ToolComponent:
    """A component, such as a plug-in or the driver, of the analysis tool that was run."""

    name : str = field(metadata={"schema_property_name": "name"})
    associated_component : ToolComponentReference = field(default=None, metadata={"schema_property_name": "associatedComponent"})
    contents : list[str] = field(factory=lambda: ['localizedData', 'nonLocalizedData'], metadata={"schema_property_name": "contents"})
    dotted_quad_file_version : str = field(default=None, metadata={"schema_property_name": "dottedQuadFileVersion"})
    download_uri : str = field(default=None, metadata={"schema_property_name": "downloadUri"})
    full_description : MultiformatMessageString = field(default=None, metadata={"schema_property_name": "fullDescription"})
    full_name : str = field(default=None, metadata={"schema_property_name": "fullName"})
    global_message_strings : dict[str, MultiformatMessageString] = field(default=None, metadata={"schema_property_name": "globalMessageStrings"})
    guid : str = field(default=None, metadata={"schema_property_name": "guid"})
    information_uri : str = field(default=None, metadata={"schema_property_name": "informationUri"})
    is_comprehensive : bool = field(default=False, metadata={"schema_property_name": "isComprehensive"})
    language : str = field(default="en-US", metadata={"schema_property_name": "language"})
    localized_data_semantic_version : str = field(default=None, metadata={"schema_property_name": "localizedDataSemanticVersion"})
    locations : list[ArtifactLocation] = field(factory=list, metadata={"schema_property_name": "locations"})
    minimum_required_localized_data_semantic_version : str = field(default=None, metadata={"schema_property_name": "minimumRequiredLocalizedDataSemanticVersion"})
    notifications : list[ReportingDescriptor] = field(factory=list, metadata={"schema_property_name": "notifications"})
    organization : str = field(default=None, metadata={"schema_property_name": "organization"})
    product : str = field(default=None, metadata={"schema_property_name": "product"})
    product_suite : str = field(default=None, metadata={"schema_property_name": "productSuite"})
    properties : PropertyBag = field(default=None, metadata={"schema_property_name": "properties"})
    release_date_utc : str = field(default=None, metadata={"schema_property_name": "releaseDateUtc"})
    rules : list[ReportingDescriptor] = field(factory=list, metadata={"schema_property_name": "rules"})
    semantic_version : str = field(default=None, metadata={"schema_property_name": "semanticVersion"})
    short_description : MultiformatMessageString = field(default=None, metadata={"schema_property_name": "shortDescription"})
    supported_taxonomies : list[ToolComponentReference] = field(factory=list, metadata={"schema_property_name": "supportedTaxonomies"})
    taxa : list[ReportingDescriptor] = field(factory=list, metadata={"schema_property_name": "taxa"})
    translation_metadata : TranslationMetadata = field(default=None, metadata={"schema_property_name": "translationMetadata"})
    version : str = field(default=None, metadata={"schema_property_name": "version"})
