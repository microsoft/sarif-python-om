# This file was generated by jschema_to_python version 1.2.3.

from ._location import Location
from ._multiformat_message_string import MultiformatMessageString
from ._property_bag import PropertyBag
from ._reporting_descriptor_reference import ReportingDescriptorReference
from ._stack import Stack
from ._web_request import WebRequest
from ._web_response import WebResponse
from attrs import define
from attrs import field


@define()
class ThreadFlowLocation:
    """A location visited by an analysis tool while simulating or monitoring the execution of a program."""

    execution_order : int = field(default=-1, metadata={"schema_property_name": "executionOrder"})
    execution_time_utc : str = field(default=None, metadata={"schema_property_name": "executionTimeUtc"})
    importance : str = field(default="important", metadata={"schema_property_name": "importance"})
    index : int = field(default=-1, metadata={"schema_property_name": "index"})
    kinds : list[str] = field(factory=list, metadata={"schema_property_name": "kinds"})
    location : Location = field(default=None, metadata={"schema_property_name": "location"})
    module : str = field(default=None, metadata={"schema_property_name": "module"})
    nesting_level : int = field(default=None, metadata={"schema_property_name": "nestingLevel"})
    properties : PropertyBag = field(default=None, metadata={"schema_property_name": "properties"})
    stack : Stack = field(default=None, metadata={"schema_property_name": "stack"})
    state : dict[str, MultiformatMessageString] = field(default=None, metadata={"schema_property_name": "state"})
    taxa : list[ReportingDescriptorReference] = field(factory=list, metadata={"schema_property_name": "taxa"})
    web_request : WebRequest = field(default=None, metadata={"schema_property_name": "webRequest"})
    web_response : WebResponse = field(default=None, metadata={"schema_property_name": "webResponse"})
