# This file was generated by jschema_to_python version 1.2.3.

from ._external_property_file_reference import ExternalPropertyFileReference
from ._property_bag import PropertyBag
from attrs import define
from attrs import field


@define()
class ExternalPropertyFileReferences:
    """References to external property files that should be inlined with the content of a root log file."""

    addresses : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "addresses"})
    artifacts : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "artifacts"})
    conversion : ExternalPropertyFileReference = field(default=None, metadata={"schema_property_name": "conversion"})
    driver : ExternalPropertyFileReference = field(default=None, metadata={"schema_property_name": "driver"})
    extensions : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "extensions"})
    externalized_properties : ExternalPropertyFileReference = field(default=None, metadata={"schema_property_name": "externalizedProperties"})
    graphs : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "graphs"})
    invocations : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "invocations"})
    logical_locations : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "logicalLocations"})
    policies : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "policies"})
    properties : PropertyBag = field(default=None, metadata={"schema_property_name": "properties"})
    results : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "results"})
    taxonomies : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "taxonomies"})
    thread_flow_locations : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "threadFlowLocations"})
    translations : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "translations"})
    web_requests : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "webRequests"})
    web_responses : list[ExternalPropertyFileReference] = field(factory=list, metadata={"schema_property_name": "webResponses"})
