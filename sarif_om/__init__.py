# This file was generated by jschema_to_python version 1.2.3.

import json
from typing import Dict
from attrs import has, fields
from cattrs import Converter
from cattrs.gen import make_dict_unstructure_fn, make_dict_structure_fn, override

from ._sarif_log import SarifLog
from ._address import Address
from ._artifact import Artifact
from ._artifact_change import ArtifactChange
from ._artifact_content import ArtifactContent
from ._artifact_location import ArtifactLocation
from ._attachment import Attachment
from ._code_flow import CodeFlow
from ._configuration_override import ConfigurationOverride
from ._conversion import Conversion
from ._edge import Edge
from ._edge_traversal import EdgeTraversal
from ._exception import Exception
from ._external_properties import ExternalProperties
from ._external_property_file_reference import ExternalPropertyFileReference
from ._external_property_file_references import ExternalPropertyFileReferences
from ._fix import Fix
from ._graph import Graph
from ._graph_traversal import GraphTraversal
from ._invocation import Invocation
from ._location import Location
from ._location_relationship import LocationRelationship
from ._logical_location import LogicalLocation
from ._message import Message
from ._multiformat_message_string import MultiformatMessageString
from ._node import Node
from ._notification import Notification
from ._physical_location import PhysicalLocation
from ._property_bag import PropertyBag
from ._rectangle import Rectangle
from ._region import Region
from ._replacement import Replacement
from ._reporting_configuration import ReportingConfiguration
from ._reporting_descriptor import ReportingDescriptor
from ._reporting_descriptor_reference import ReportingDescriptorReference
from ._reporting_descriptor_relationship import ReportingDescriptorRelationship
from ._result import Result
from ._result_provenance import ResultProvenance
from ._run import Run
from ._run_automation_details import RunAutomationDetails
from ._special_locations import SpecialLocations
from ._stack import Stack
from ._stack_frame import StackFrame
from ._suppression import Suppression
from ._thread_flow import ThreadFlow
from ._thread_flow_location import ThreadFlowLocation
from ._tool import Tool
from ._tool_component import ToolComponent
from ._tool_component_reference import ToolComponentReference
from ._translation_metadata import TranslationMetadata
from ._version_control_details import VersionControlDetails
from ._web_request import WebRequest
from ._web_response import WebResponse


def _generate_sarif_report_cattrs_converter() -> Converter:
    converter = Converter()

    def _unstructure(cls):
        return make_dict_unstructure_fn(
            cls,
            converter,
            **{
                a.name: override(
                    rename=a.metadata["schema_property_name"],
                    omit_if_default=True,
                )
                for a in fields(cls)
            },
        )

    def _structure(cls):
        return make_dict_structure_fn(
            cls,
            converter,
            **{
                a.name: override(
                    rename=a.metadata["schema_property_name"],
                )
                for a in fields(cls)
            },
        )

    converter.register_unstructure_hook_factory(has, _unstructure)
    converter.register_structure_hook_factory(has, _structure)
    return converter


_converter = _generate_sarif_report_cattrs_converter()


def to_dict(sarif_log: SarifLog) -> Dict:
    return _converter.unstructure(sarif_log, SarifLog)


def to_json(sarif_log: SarifLog, indent=2) -> str:
    obj = to_dict(sarif_log)
    return json.dumps(obj, indent=indent)


def from_dict(data: Dict) -> SarifLog:
    return _converter.structure(data, SarifLog)


def from_json(data: str) -> SarifLog:
    return from_dict(json.loads(data))
